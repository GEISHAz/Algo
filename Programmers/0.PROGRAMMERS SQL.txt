#SQL Lv 1. 아픈동물찾기
SELECT ANIMAL_ID, NAME 
FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'Sick';

# SQL Lv 1. 어린동물 찾기 

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION != 'Aged'
ORDER BY ANIMAL_ID;

# SQL Lv 2. 최소값 구하기

SELECT MIN(DATETIME) AS 시간
FROM ANIMAL_INS;

# SQL Lv 2. 동물 수 구하기

SELECT COUNT(*) 
FROM ANIMAL_INS;

# SQL Lv 2. 동명 동물 수 찾기 
SELECT NAME, COUNT(NAME) AS 'COUNT'
FROM ANIMAL_INS 
GROUP BY NAME
HAVING COUNT(NAME) > 1
ORDER BY NAME;

# SQL Lv 2. 이름에 el이 들어가는 동물 찾기

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE ANIMAL_TYPE = 'Dog' 
AND NAME LIKE "%EL%"
ORDER BY NAME;

20240917===========================================

# SQL Lv 1. 동물의 아이디와 이름

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

# SQL Lv 1. 여러기준으로 정렬하기

SELECT ANIMAL_ID,NAME,DATETIME
FROM ANIMAL_INS
ORDER BY NAME, DATETIME DESC;

# SQL Lv 1. 상위 N개 레코드

SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1;

# SQL Lv 1. 이름이 있는 동물의 아이디

SELECT ANIMAL_ID 
FROM ANIMAL_INS
WHERE NAME IS NOT NULL;

# SQL Lv 2. 중복 제거하기

SELECT COUNT(DISTINCT NAME) AS count
FROM ANIMAL_INS
WHERE NAME IS NOT NULL;

20240918===========================================

# SQL Lv 1. 나이 정보가 없는 회원 수 구하기

SELECT COUNT(*)
FROM USER_INFO
WHERE AGE IS NULL;

# SQL Lv 1. 강원도에 위치한 생산공장 목록 출력하기

SELECT FACTORY_ID,FACTORY_NAME,ADDRESS
FROM FOOD_FACTORY
WHERE ADDRESS LIKE "강원도%";

# SQL Lv 1. 가장 비싼 상품 구하기

SELECT MAX(PRICE) AS MAX_PRICE
FROM PRODUCT;

# SQL Lv 1. 경기도에 위치한 식품창고 목록 출력하기

# COALESCE(NAME,"DEFAULT")  NAME 출력하고 NAME IS NULL 이면 DEFAULT 출력
SELECT WAREHOUSE_ID,WAREHOUSE_NAME,ADDRESS,COALESCE(FREEZER_YN,'N') AS FREEZER_YN
FROM FOOD_WAREHOUSE
WHERE ADDRESS LIKE "경기도%"
ORDER BY WAREHOUSE_ID;

# SQL Lv 2. 가격이 제일 비싼 식품의 정보 출력하기

SELECT PRODUCT_ID,PRODUCT_NAME,PRODUCT_CD,CATEGORY,PRICE
FROM FOOD_PRODUCT
ORDER BY PRICE DESC
LIMIT 1;

20240921===========================================

# SQL Lv 1. 흉부외과 또는 일반외과 의사 목록 출력하기

#DATE_FORMAT(HIRE_YMD,"%Y-%M-%D")  %D 인지 %d인지에 따라 표현방식 다름
SELECT DR_NAME, DR_ID, MCDP_CD, DATE_FORMAT(HIRE_YMD,"%Y-%m-%d") AS HIRE_YMD
FROM DOCTOR
WHERE MCDP_CD = "CS" OR MCDP_CD = "GS"
ORDER BY HIRE_YMD DESC, DR_NAME;

# SQL Lv 1. 역순 정렬하기

SELECT NAME, DATETIME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC;

# SQL Lv 2. NULL 처리하기

SELECT ANIMAL_TYPE, COALESCE(NAME,"No name") AS NAME,SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

# SQL Lv 1. 이름이 없는 동물의 아이디

SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NULL
ORDER BY ANIMAL_ID;


# SQL Lv 2. DATETIME에서 DATE로 형 변환

SELECT ANIMAL_ID,NAME, DATE_FORMAT(DATETIME,"%Y-%m-%d") AS "날짜"
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

20240922===========================================

-- SQL Lv 2. 고양이와 개는 몇 마리 있을까

SELECT ANIMAL_TYPE,COUNT(*) AS "count"
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE;

-- SQL Lv 2. 중성화 여부 파악하기

SELECT ANIMAL_ID,NAME, 
    CASE WHEN SEX_UPON_INTAKE LIKE '%Neutered%' THEN 'O'
    WHEN SEX_UPON_INTAKE LIKE '%Spayed%' THEN 'O'
    ELSE 'X' END 
    AS "중성화"
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

-- SQL Lv 2. 입양 시각 구하기(1)

SELECT TO_NUMBER(TO_CHAR(DATETIME,'HH24')) AS HOUR,COUNT(*) AS COUNT
FROM ANIMAL_OUTS
WHERE TO_CHAR(DATETIME,'HH24') BETWEEN 9 AND 19
GROUP BY TO_CHAR(DATETIME,'HH24')
ORDER BY HOUR;

20240924===========================================

-- SQL Lv 1. 인기있는 아이스크림

SELECT FLAVOR 
FROM FIRST_HALF
ORDER BY TOTAL_ORDER DESC, SHIPMENT_ID;

-- SQL Lv 1. 12세 이하인 여자 환자 목록 출력하기

SELECT PT_NAME, PT_NO, GEND_CD, AGE, COALESCE(TLNO,'NONE')
FROM PATIENT
WHERE AGE < 13 AND GEND_CD = 'W'
ORDER BY AGE DESC,PT_NAME;

-- SQL Lv 2. 자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기

SELECT CAR_TYPE, COUNT(*) AS CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE '%가죽시트%'
  OR OPTIONS LIKE '%열선시트%'
  OR OPTIONS LIKE '%통풍시트%'
GROUP BY CAR_TYPE
ORDER BY CAR_TYPE;

-- SQL Lv 2. 조건에 맞는 도서와 저자 리스트 출력하기

SELECT b.BOOK_ID as BOOK_ID, a.AUTHOR_NAME as AUTHOR_NAME, DATE_FORMAT(b.PUBLISHED_DATE, '%Y-%m-%d') AS PUBLISHED_DATE
FROM BOOK b
LEFT JOIN AUTHOR a ON b.AUTHOR_ID = A.AUTHOR_ID
WHERE b.CATEGORY = '경제'
ORDER BY b.PUBLISHED_DATE;
