#SQL Lv 1. 아픈동물찾기
SELECT ANIMAL_ID, NAME 
FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'Sick';

# SQL Lv 1. 어린동물 찾기 

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION != 'Aged'
ORDER BY ANIMAL_ID;

# SQL Lv 2. 최소값 구하기

SELECT MIN(DATETIME) AS 시간
FROM ANIMAL_INS;

# SQL Lv 2. 동물 수 구하기

SELECT COUNT(*) 
FROM ANIMAL_INS;

# SQL Lv 2. 동명 동물 수 찾기 
SELECT NAME, COUNT(NAME) AS 'COUNT'
FROM ANIMAL_INS 
GROUP BY NAME
HAVING COUNT(NAME) > 1
ORDER BY NAME;

# SQL Lv 2. 이름에 el이 들어가는 동물 찾기

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE ANIMAL_TYPE = 'Dog' 
AND NAME LIKE "%EL%"
ORDER BY NAME;

20240917===========================================

# SQL Lv 1. 동물의 아이디와 이름

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

# SQL Lv 1. 여러기준으로 정렬하기

SELECT ANIMAL_ID,NAME,DATETIME
FROM ANIMAL_INS
ORDER BY NAME, DATETIME DESC;

# SQL Lv 1. 상위 N개 레코드

SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1;

# SQL Lv 1. 이름이 있는 동물의 아이디

SELECT ANIMAL_ID 
FROM ANIMAL_INS
WHERE NAME IS NOT NULL;

# SQL Lv 2. 중복 제거하기

SELECT COUNT(DISTINCT NAME) AS count
FROM ANIMAL_INS
WHERE NAME IS NOT NULL;

